basePath: /
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API Gateway for the Used Book Marketplace microservices
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Used Book Marketplace API Gateway
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                properties:
                  token:
                    type: string
                  user:
                    type: object
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              message:
                type: string
            type: object
      summary: User login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          properties:
            address:
              type: string
            email:
              type: string
            fullname:
              type: string
            password:
              type: string
            role:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /auth/users/{id}:
    get:
      consumes:
      - application/json
      description: Get user information by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - auth
    patch:
      consumes:
      - application/json
      description: Update user account balance
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Balance update data
        in: body
        name: request
        required: true
        schema:
          properties:
            balance:
              type: number
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user balance
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Update user profile information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User update data
        in: body
        name: request
        required: true
        schema:
          properties:
            address:
              type: string
            email:
              type: string
            fullname:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user information
      tags:
      - auth
  /auth/users/resend-verification-email:
    post:
      consumes:
      - application/json
      description: Resend email verification to user
      parameters:
      - description: User email
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Resend verification email
      tags:
      - auth
  /auth/users/verify:
    post:
      consumes:
      - application/json
      description: Verify user email address with token
      parameters:
      - description: Verification token
        in: body
        name: request
        required: true
        schema:
          properties:
            token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Verify user email
      tags:
      - auth
  /books:
    get:
      consumes:
      - application/json
      description: Get list of all books with optional category filter
      parameters:
      - description: Book category filter
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: array
              message:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book listing (seller only)
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Book data
        in: body
        name: request
        required: true
        schema:
          properties:
            author:
              type: string
            category:
              type: string
            costs:
              type: number
            description:
              type: string
            name:
              type: string
            stock:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book listing (seller only)
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Get book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update book details (seller only)
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Book update data
        in: body
        name: request
        required: true
        schema:
          properties:
            author:
              type: string
            category:
              type: string
            costs:
              type: number
            description:
              type: string
            name:
              type: string
            stock:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update book information
      tags:
      - books
  /transactions:
    get:
      consumes:
      - application/json
      description: Get all transactions for the authenticated user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: array
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Create a new transaction for purchasing a book
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction data
        in: body
        name: request
        required: true
        schema:
          properties:
            amount:
              type: integer
            book_id:
              type: integer
            name:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              data:
                properties:
                  payment_url:
                    type: string
                  transaction_id:
                    type: string
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new transaction
      tags:
      - transactions
  /transactions/{trans_id}:
    put:
      consumes:
      - application/json
      description: Update transaction status (typically used by payment webhook)
      parameters:
      - description: Transaction ID
        in: path
        name: trans_id
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction status update
        in: body
        name: request
        required: true
        schema:
          properties:
            status:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              message:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update transaction status
      tags:
      - transactions
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
